syntax = "proto3";

package auth;

// Types 

// Role Enum
enum Role {
  USER = 0;
  ADMIN = 1;
  SUDO = 2;
}

// Status Enum
enum Status {
  ACTIVE = 0;
  INACTIVE = 1;
  DELETED = 2;
}


// User Message
message User {
  string email = 1;
  optional int64 lastLogin = 2;
  repeated Role roles = 3;
  Status status = 4;
  int64 createdAt = 5;
  int64 updatedAt = 6;
}

// Service
service AuthService {
  // Pure Authentication
  rpc Register (RegisterRequest) returns (RegisterResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc Validate (ValidateRequest) returns (ValidateResponse) {}

  // User Management
  rpc FindUserById (FindUserByIdRequest) returns (FindUserByIdResponse) {}
  rpc RemoveUserById (RemoveUserByIdRequest) returns (RemoveUserByIdResponse) {}
  
  // User Status Mangement 
  rpc ActivateUserById (ActivateUserByIdRequest) returns (ActivateUserByIdResponse) {}
  rpc DeactivateUserById (DeactivateUserByIdRequest) returns (DeactivateUserByIdResponse) {}
  
  // User Role Management
  rpc AddRoleToUser (AddRoleToUserRequest) returns (AddRoleToUserResponse) {}
  rpc RemoveRoleFromUser (RemoveRoleFromUserRequest) returns (RemoveRoleFromUserResponse) {}
  
  
  // Skill Management
  rpc Skill (SkillRequest) returns (SkillResponse) {}
  
}

// Register
// Request
message RegisterRequest {
  string email = 1;
  string password = 2;
}

// Response
message RegisterResponseData {
  string userId = 1;
}

message RegisterResponse {
  int32 status = 1;
  repeated string error = 2;
  RegisterResponseData data = 3;
}

// Login
// Request
message LoginRequest {
  string email = 1;
  string password = 2;
}

// Response
message LoginResponseData {
  string token = 1;
}

message LoginResponse {
  int32 status = 1;
  repeated string error = 2;
  LoginResponseData data = 3;
}

// Validate
// Request
message ValidateRequest {
  string token = 1;
}

// Response
message ValidateResponseData {
  string userId = 1;
}

message ValidateResponse {
  int32 status = 1;
  repeated string error = 2;
  ValidateResponseData data = 3;
}

// ActivateUser
// Request
message ActivateUserByIdRequest {
  string userId = 1;
}

//Response
message ActivateUserByIdResponseData {}

message ActivateUserByIdResponse {
  int32 status = 1;
  repeated string error = 2;
  ActivateUserByIdResponseData data = 3;
}

// DeativateUser
// Request
message DeactivateUserByIdRequest {
  string userId = 1;
}

//Response
message DeactivateUserByIdResponseData {}

message DeactivateUserByIdResponse {
  int32 status = 1;
  repeated string error = 2;
  DeactivateUserByIdResponseData data = 3;
}


// FindUserById
// Request
message FindUserByIdRequest {
  string userId = 1;
}

// Response
message FindUserByIdResponseData {
  User user = 1;
}

message FindUserByIdResponse {
  int32 status = 1;
  repeated string error = 2;
  FindUserByIdResponseData data = 3;
}

// RemoveUserById
// Request
message RemoveUserByIdRequest {
  string userId = 1;
}

// Response
message RemoveUserByIdResponseData {}

message RemoveUserByIdResponse {
  int32 status = 1;
  repeated string error = 2;
  RemoveUserByIdResponseData data = 3;
}

// AddRoleToUser
// Request
message AddRoleToUserRequest {
  string userId = 1;
  Role role = 2;
}

// Response
message AddRoleToUserResponseData {}
message AddRoleToUserResponse {
  int32 status = 1;
  repeated string error = 2;
  AddRoleToUserResponseData data = 3;
}

// RemoveRoleFromUser
// Request
message RemoveRoleFromUserRequest {
  string userId = 1;
  Role role = 2;
}

// Response
message RemoveRoleFromUserResponseData {}
message RemoveRoleFromUserResponse {
  int32 status = 1;
  repeated string error = 2;
  RemoveRoleFromUserResponseData data = 3;
}

// Skill
message SkillRequest {
  string skillId = 1;
}

message SkillResponse {
  int32 status = 1;
  repeated string error = 2;
}