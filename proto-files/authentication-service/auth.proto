syntax = "proto3";

package auth;

// Types 

// Role Enum
enum Role {
  USER = 0;
  ADMIN = 1;
  SUDO = 2;
}

// User Message
message User {
  string email = 1;
  optional int64 lastLogin = 2;
  repeated Role roles = 3;
  int64 createdAt = 4;
  int64 updatedAt = 5;
}

// Service
service AuthService {
  // Pure Authentication
  rpc Register (RegisterRequest) returns (RegisterResponse) {}
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc Validate (ValidateRequest) returns (ValidateResponse) {}

  // User Management
  rpc FindUserById (FindUserByIdRequest) returns (FindUserByIdResponse) {}
  rpc UpdateUserRole (UpdateUserRoleRequest) returns (UpdateUserRoleResponse) {}
  
  // Skill Management
  rpc Skill (SkillRequest) returns (SkillResponse) {}
  
}

// Register
// Request
message RegisterRequest {
  string email = 1;
  string password = 2;
}

// Response
message RegisterResponseData {
  string userId = 1;
}

message RegisterResponse {
  int32 status = 1;
  repeated string error = 2;
  RegisterResponseData data = 3;
}

// Login
// Request
message LoginRequest {
  string email = 1;
  string password = 2;
}

// Response
message LoginResponseData {
  string token = 1;
}

message LoginResponse {
  int32 status = 1;
  repeated string error = 2;
  LoginResponseData data = 3;
}

// Validate
// Request
message ValidateRequest {
  string token = 1;
}

// Response
message ValidateResponseData {
  string userId = 1;
}

message ValidateResponse {
  int32 status = 1;
  repeated string error = 2;
  ValidateResponseData data = 3;
}

// FindUserById
// Request
message FindUserByIdRequest {
  string userId = 1;
}

// Response
message FindUserByIdResponseData {
  User user = 1;
}

message FindUserByIdResponse {
  int32 status = 1;
  repeated string error = 2;
  FindUserByIdResponseData data = 3;
}

// UpdateUserRole
// Request
message UpdateUserRoleRequest {
  repeated Role roles = 1;
  string userId = 2;
}

// Response
message UpdateUserRoleResponse {
  int32 status = 1;
  repeated string error = 2;
}

// Skill
message SkillRequest {
  string skillId = 1;
}

message SkillResponse {
  int32 status = 1;
  repeated string error = 2;
}